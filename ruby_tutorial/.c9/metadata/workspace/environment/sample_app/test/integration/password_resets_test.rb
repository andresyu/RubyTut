{"filter":false,"title":"password_resets_test.rb","tooltip":"/environment/sample_app/test/integration/password_resets_test.rb","undoManager":{"mark":18,"position":18,"stack":[[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["require 'test_helper'","","class PasswordResetsTest < ActionDispatch::IntegrationTest","  # test \"the truth\" do","  #   assert true","  # end","end",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":61,"column":3},"action":"insert","lines":["require 'test_helper'","","class PasswordResetsTest < ActionDispatch::IntegrationTest","","  def setup","    ActionMailer::Base.deliveries.clear","    @user = users(:michael)","  end","","  test \"password resets\" do","    get new_password_reset_path","    assert_template 'password_resets/new'","    # Invalid email","    post password_resets_path, params: { password_reset: { email: \"\" } }","    assert_not flash.empty?","    assert_template 'password_resets/new'","    # Valid email","    post password_resets_path,","         params: { password_reset: { email: @user.email } }","    assert_not_equal @user.reset_digest, @user.reload.reset_digest","    assert_equal 1, ActionMailer::Base.deliveries.size","    assert_not flash.empty?","    assert_redirected_to root_url","    # Password reset form","    user = assigns(:user)","    # Wrong email","    get edit_password_reset_path(user.reset_token, email: \"\")","    assert_redirected_to root_url","    # Inactive user","    user.toggle!(:activated)","    get edit_password_reset_path(user.reset_token, email: user.email)","    assert_redirected_to root_url","    user.toggle!(:activated)","    # Right email, wrong token","    get edit_password_reset_path('wrong token', email: user.email)","    assert_redirected_to root_url","    # Right email, right token","    get edit_password_reset_path(user.reset_token, email: user.email)","    assert_template 'password_resets/edit'","    assert_select \"input[name=email][type=hidden][value=?]\", user.email","    # Invalid password & confirmation","    patch password_reset_path(user.reset_token),","          params: { email: user.email,","                    user: { password:              \"foobaz\",","                            password_confirmation: \"barquux\" } }","    assert_select 'div#error_explanation'","    # Empty password","    patch password_reset_path(user.reset_token),","          params: { email: user.email,","                    user: { password:              \"\",","                            password_confirmation: \"\" } }","    assert_select 'div#error_explanation'","    # Valid password & confirmation","    patch password_reset_path(user.reset_token),","          params: { email: user.email,","                    user: { password:              \"foobaz\",","                            password_confirmation: \"foobaz\" } }","    assert is_logged_in?","    assert_not flash.empty?","    assert_redirected_to user","  end","end"]}],[{"start":{"row":60,"column":5},"end":{"row":61,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":61,"column":0},"end":{"row":61,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":61,"column":2},"end":{"row":62,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":62,"column":0},"end":{"row":62,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":62,"column":2},"end":{"row":77,"column":0},"action":"insert","lines":["test \"expired token\" do","    get new_password_reset_path","    post password_resets_path,","         params: { password_reset: { email: @user.email } }","","    @user = assigns(:user)","    @user.update_attribute(:reset_sent_at, 3.hours.ago)","    patch password_reset_path(@user.reset_token),","          params: { email: @user.email,","                    user: { password:              \"foobar\",","                            password_confirmation: \"foobar\" } }","    assert_response :redirect","    follow_redirect!","    assert_match /FILL_IN/i, response.body","  end",""],"id":5}],[{"start":{"row":77,"column":0},"end":{"row":78,"column":0},"action":"remove","lines":["",""],"id":6}],[{"start":{"row":75,"column":4},"end":{"row":75,"column":42},"action":"remove","lines":["assert_match /FILL_IN/i, response.body"],"id":7},{"start":{"row":75,"column":4},"end":{"row":75,"column":44},"action":"insert","lines":["assert_match (/expired/i), response.body"]}],[{"start":{"row":75,"column":44},"end":{"row":76,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":76,"column":0},"end":{"row":76,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":76,"column":4},"end":{"row":79,"column":0},"action":"insert","lines":["user.reload","assert_nil user.reset_digest","",""],"id":10}],[{"start":{"row":77,"column":0},"end":{"row":77,"column":2},"action":"insert","lines":["  "],"id":11}],[{"start":{"row":77,"column":2},"end":{"row":77,"column":4},"action":"insert","lines":["  "],"id":12}],[{"start":{"row":76,"column":1},"end":{"row":77,"column":32},"action":"remove","lines":["   user.reload","    assert_nil user.reset_digest"],"id":13}],[{"start":{"row":76,"column":0},"end":{"row":76,"column":1},"action":"remove","lines":[" "],"id":14}],[{"start":{"row":76,"column":0},"end":{"row":77,"column":0},"action":"remove","lines":["",""],"id":15}],[{"start":{"row":76,"column":0},"end":{"row":77,"column":0},"action":"remove","lines":["",""],"id":16}],[{"start":{"row":76,"column":0},"end":{"row":77,"column":0},"action":"remove","lines":["",""],"id":17}],[{"start":{"row":59,"column":29},"end":{"row":60,"column":0},"action":"insert","lines":["",""],"id":18},{"start":{"row":60,"column":0},"end":{"row":60,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":60,"column":4},"end":{"row":63,"column":0},"action":"insert","lines":["user.reload","assert_nil user.reset_digest","",""],"id":19}],[{"start":{"row":61,"column":0},"end":{"row":61,"column":2},"action":"insert","lines":["  "],"id":20}],[{"start":{"row":61,"column":2},"end":{"row":61,"column":4},"action":"insert","lines":["  "],"id":21}]]},"ace":{"folds":[],"scrolltop":2,"scrollleft":0,"selection":{"start":{"row":61,"column":4},"end":{"row":61,"column":4},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":4,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1538854713969,"hash":"9698f813f28af982de79fbbc90cd37724f512276"}